---
- name: create lifecycle environments for the Satellite Server
  vars_files:
    - values.yml
  hosts: localhost
  tasks:
          #  - name: Create lifecycle environments
          #   shell: hammer lifecycle-environment create --name Development --organization "Default Organization" --prior Library

          # - name: Create lifecycle environments
          #   shell: hammer lifecycle-environment create --name Test --organization "Default Organization" --prior Library

          # - name: Create lifecycle environments
          #   shell: hammer lifecycle-environment create --name Production --organization "Default Organization" --prior Library
  
          #  - name: "Enable Red Hat Satellite Client 6 for RHEL 9 x86_64 RPMs repository with label"
          #    shell: 'hammer repository-set enable --name "Red Hat Satellite Client 6 for RHEL 9 x86_64 (RPMs)" --organization "Default Organization"'

  - name: "Enable RHEL 9 BaseOS RPMs repository with label"
    redhat.satellite.repository_set:
      username: "{{ workshop_satellite_user_name }}"
      password: "{{ workshop_satellite_user_password }}"
      server_url: "{{ workshop_satellite_url }}"
      organization: "Default Organization"
      label: rhel-9-for-x86_64-baseos-rpms
      repositories:
        - releasever: "9"
      state: enabled

  - name: "Enable RHEL 9 AppStream RPMs repository with label"
    redhat.satellite.repository_set:
      username: "{{ workshop_satellite_user_name }}"
      password: "{{ workshop_satellite_user_password }}"
      server_url: "{{ workshop_satellite_url }}"
      organization: "Default Organization"
      label: rhel-9-for-x86_64-appstream-rpms
      repositories:
        - releasever: "9"
      state: enabled

  - name: "Enable Directory Server RPMs repository with label"
    redhat.satellite.repository_set:
      username: "{{ workshop_satellite_user_name }}"
      password: "{{ workshop_satellite_user_password }}"
      server_url: "{{ workshop_satellite_url }}"
      organization: "Default Organization"
      label: dirsrv-12-for-rhel-9-x86_64-rpms
      repositories:
        - releasever: "9"
      state: enabled

  - name: "Enable the Directory Server Repo and set to Immediate"
    redhat.satellite.repository:
      username: "{{ workshop_satellite_user_name }}"
      password: "{{ workshop_satellite_user_password }}"
      server_url: "{{ workshop_satellite_url }}"
      name: "Red Hat Directory Server 12 for RHEL 9 x86_64 RPMs 9"
      state: present
      content_type: "yum"
      product: "Red Hat Directory Server"
      organization: "Default Organization"
      url: "https://cdn.redhat.com/content/dist/rhel9/9/x86_64/resilientstorage/os"
      download_policy: immediate

#Sync Repos
#Using hammer commands as repository_sync module didn't provide an async option
  - name: Sync the Directory Server Repo
    become: true
    shell: hammer repository synchronize --name "Red Hat Directory Server 12 for RHEL 9 x86_64 RPMs 9" --product "Red Hat Directory Server" --organization "Default Organization" --async
  
  - name: Sync the RHEL 9 BaseOS Repo
    become: true
    shell: hammer repository synchronize --name "Red Hat Enterprise Linux 9 for x86_64 - BaseOS RPMs 9" --product "Red Hat Enterprise Linux for x86_64" --organization "Default Organization" --async

  - name: Sync the RHEL 9 AppStream Repo
    become: true
    shell: hammer repository synchronize --name "Red Hat Enterprise Linux 9 for x86_64 - AppStream RPMs 9" --product "Red Hat Enterprise Linux for x86_64" --organization "Default Organization" --async

  - name: Sync the RHEL 9 Satellite-Client Repo
    become: true
    shell: hammer repository synchronize --name "Red Hat Satellite Client 6 for RHEL 9 x86_64 RPMs" --product "Red Hat Enterprise Linux for x86_64" --organization "Default Organization" --async

#Check for running sync tasks and pause until sync is complete
#  - name: Search for running repo/Capsule sync tasks and CV Publish tasks
#    resource_info:
#      server_url: "{{ workshop_satellite_url }}"
#      username: "{{ workshop_satellite_user_name }}"
#      password: "{{ workshop_satellite_user_password }}"
#      resource: foreman_tasks
#      search: "(label = Actions::Katello::Repository::Sync or label = Actions::Katello::CapsuleContent::Sync or label = Actions::Katello::ContentView::CapsuleSync or label= Actions::Katello::ContentView::Publish) and state = running"
#    register: tasks

    #  - name: Wait for all found tasks to finish
    #    wait_for_task:
    #      server_url: "{{ workshop_satellite_url }}"
    #      username: "{{ workshop_satellite_user_name }}"
    #      password: "{{ workshop_satellite_user_password }}"
    #      task: "{{ item }}"
    #      timeout: 900
    #    loop: "{{ tasks.resources | map(attribute='id') | list }}"

    #  - name: Wait for repository sync tasks to complete
    #    redhat.satellite.wait_for_task:
    #      server_url: "{{ workshop_satellite_url }}"
    #      username: "{{ workshop_satellite_user_name }}"
    #      password: "{{ workshop_satellite_user_password }}"
    #      search: >
    #        label = Actions::Katello::Repository::Sync or
    #        label = Actions::Katello::CapsuleContent::Sync or
    #        label = Actions::Katello::ContentView::CapsuleSync or
    #        label = Actions::Katello::ContentView::Publish
    #      timeout: 900

  - name: Pausing for sync to finish
    ansible.builtin.pause:
      minutes: 1

#Ensure Capsule will autosync after CV publish/promote    
  - name: Set Capsule to sync on LCE change
    become: true
    shell: 'hammer setting set --name foreman_proxy_content_auto_sync --value True'

#Assign LCE,Location,Org to the Capsule
  - name: "Update the Caspule settings"
    redhat.satellite.smart_proxy:
      username: "{{ workshop_satellite_user_name }}"
      password: "{{ workshop_satellite_user_password }}"
      server_url: "{{ workshop_satellite_url }}"
      name: "capsule.{{ subdomain }}"
      url: "https://capsule.{{ subdomain }}:9090"
      download_policy: "on_demand"
      lifecycle_environments:
        - "Development"
        - "Test"
        - "Production"
      organizations:
        - "Default Organization"
      locations:
        - "Default Location"
      state: present

#Create RHEL9-CV Content View
  - name: "Create or update Red Hat content view"
    redhat.satellite.content_view:
      username: "{{ workshop_satellite_user_name }}"
      password: "{{ workshop_satellite_user_password }}"
      server_url: "{{ workshop_satellite_url }}"
      name: "RHEL9-CV"
      organization: "Default Organization"
      repositories:
        - name: 'Red Hat Enterprise Linux 9 for x86_64 - AppStream RPMs 9'
          product: 'Red Hat Enterprise Linux for x86_64'
        - name: 'Red Hat Enterprise Linux 9 for x86_64 - BaseOS RPMs 9'
          product: 'Red Hat Enterprise Linux for x86_64'
        - name: 'Red Hat Satellite Client 6 for RHEL 9 x86_64 RPMs'
          product: 'Red Hat Enterprise Linux for x86_64'

#Publish RHEL9-CV Content View    
  - name: "Publish Red Hat Content View"
    redhat.satellite.content_view_version:
      username: "{{ workshop_satellite_user_name }}"
      password: "{{ workshop_satellite_user_password }}"
      server_url: "{{ workshop_satellite_url }}"
      content_view: "RHEL9-CV"
      organization: "Default Organization"
      version: "1.0"
      lifecycle_environments:
        - Library
        - Development
        - Test
        - Production

#Create Activation Key for registration
  - name: "Create client activation key"
    redhat.satellite.activation_key:
      username: "{{ workshop_satellite_user_name }}"
      password: "{{ workshop_satellite_user_password }}"
      server_url: "{{ workshop_satellite_url }}"
      name: "client_key"
      organization: "Default Organization"
      lifecycle_environment: "Development"
      content_view: 'RHEL9-CV'
      auto_attach: true
      release_version: 9

#Create Domain for Internal Lab Environment
  - name: Create Domain for Lab
    redhat.satellite.domain:
      name: "{{ subdomain_internal }}"
      description: "Internal Lab Domain"
      locations:
        - "Default Location"
      organizations:
        - "Default Organization"
      username: "{{ workshop_satellite_user_name }}"
      password: "{{ workshop_satellite_user_password }}"
      server_url: "{{ workshop_satellite_url }}"
      state: present

#Create Subnet for Internal Lab Environment
  - name: Create Subnet for Lab
    redhat.satellite.subnet:
      name: "Lab Subnet"
      description: "Subnet for Satellite Lab"
      network: "192.168.0.0"
      mask: "255.255.255.254"
      gateway: "192.168.0.1"
      boot_mode: "DHCP"
      remote_execution_proxies:
        - "satellite.{{ subdomain }}"
        - "capsule.{{ subdomain }}"
      mtu: 9001
      domains:
        - "{{ subdomain_internal }}"
      organizations:
        - "Default Organization"
      locations:
        - "Default Location"
      username: "{{ workshop_satellite_user_name }}"
      password: "{{ workshop_satellite_user_password }}"
      server_url: "{{ workshop_satellite_url }}"
      state: present


#Register Node1 to the Capsule server
- name: Register Node1 to Capsule
  vars_files:
    - values.yml
  hosts: "{{ workshop_node1 }}"
  become: True
  tasks:
  - name: Remove all katello-ca-consumer RPMs
    shell: 'dnf remove katello-ca-consumer-* -y'

  - name: Remove old registration
    shell: 'subscription-manager clean'

#Install katello-ca-consumer RPM on Node1 Client
  - name: Install katello-ca-consumer RPM
    shell: 'dnf install http://capsule.{{ subdomain_internal }}/pub/katello-ca-consumer-latest.noarch.rpm -y'

#Register Node1 Client to the Capsule server to use RHEL9-CV
  - name: Register Node1 to Capsule
    shell: 'subscription-manager register --username {{workshop_satellite_user_name}} --password {{workshop_satellite_user_password}} --org "Default_Organization" --environments Development/RHEL9-CV --force'

#Enable the BaseOS, Appstream, and Satellite-Client repos on Node1
  - name: Enable BaseOS, Appstream, Satellite-Client repos on Node1
    shell: 'subscription-manager repos --enable rhel-9-for-x86_64-appstream-rpms --enable rhel-9-for-x86_64-baseos-rpms --enable satellite-client-6-for-rhel-9-x86_64-rpms'
